name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'Build and push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install Dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Generate image tag
        id: generate_image_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::665548757588:role/ecr_role
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build docker image
        id: build-docker-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_image_tag.outputs.sha }}
        run: |
          docker build -t $ECR_REGISTRY/iac-ci-repository:$TAG .
          docker push $ECR_REGISTRY/iac-ci-repository:$TAG
          docker tag $ECR_REGISTRY/iac-ci-repository:$TAG $ECR_REGISTRY/iac-ci-repository:latest
          docker push $ECR_REGISTRY/iac-ci-repository:latest
          IMAGE=$(echo $ECR_REGISTRY/iac-ci-repository:$TAG)
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"

      - name: Deploy to App Runner
        id: deploy
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: iac-ci-repository
          access-role-arn: arn:aws:iam::665548757588:role/apprunner_role
          image: ${{ steps.build-docker-image.outputs.image }}
          region: us-east-1
          cpu: 1
          memory: 2
          port: 3000
          # wait-for-service-stability-seconds: 180

      - name: App runner check
        run: echo "App runner at ${{ steps.deploy.outputs.service-url }}"
